function c(e,r={root:null,rootMargin:"0px",threshold:.01}){return new IntersectionObserver(e,r)}const t=new Map,a=(e,r)=>{e.forEach(async n=>{const{target:o}=n;t.get(o)(n)})};let s;const b={init(e){return s=c(a,e),this},observe(e,r){t.set(e,r),s.observe(e)},unobserve(e){t.delete(e),s.unobserve(e)},getObserver(){return s},getRegistry(){return t},clear(){Array.from(t.keys()).forEach(r=>this.unobserve(r)),t.clear()}};Object.freeze(b);export{b as I};
