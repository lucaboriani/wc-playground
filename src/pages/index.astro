---
import HomeLayout from '../layouts/HomeLayout.astro';
import MetaFrameworks from '../components/MetaFrameworks.astro';
import TheAstroFramework from '../components/TheAstroFramework.astro';
import Animations from '../components/Animations.astro';
import WebComponents from '../components/WebComponents.astro';
import Intro from '../components/Intro.astro';
import Testing from '../components/Testing.astro';

export const prerender = true;
---

<HomeLayout title="Welcome to The playground">
	<main class="w-full relative grow" slot="main">
		<Intro/>
		<div id="cont" class="flex flex-col mt-20 mx-20 min-h-screen">
			<h1 class="self-start text-red-400 glitch">Here youll' find a few goodies</h1>
			<h2>Made with different styles and techniques </h2>
			<p>As it's built with 
				<a href="https://astro.build/" target="_blank">Astro</a>
				and you can literally throw almost <em class="text-2xl"> Whatever</em> at it !
			</p>

			<MetaFrameworks/>
			<TheAstroFramework/>
			<Animations/>
			<WebComponents/>
			<Testing/>	
		</div>
		<footer class="w-screen mt-8 border-solid border-2 border-black border-t-2 border-t-red-400">
			<img 
				id="feets" 
				class="h-[24rem] object-cover w-full img" 
				loading="lazy" 
				src="./Peter-Boyle-Feet-4902348.webp" alt="Frank jr" 
			/>
		</footer>
	</main>
</HomeLayout>
<script>
	import IntersectionHandler from '../scripts/observer/IntersectionHandler'
	(async function () {
		const options = {
			root: null,
			rootMargin: '0px',
			threshold: 0.01
		}
    
		IntersectionHandler.init(options) 
		const mount = document.getElementById('feets').parentNode  as HTMLElement
		const cont =  document.getElementById('feets') as HTMLElement
		

		function start(){
			cont.style.display = 'initial'
		}
		function stop (){
			cont.style.display = 'hidden'
		}
		
		function handleAppIntersection (entry){
      const { isIntersecting } = entry
			if(isIntersecting){
				start()
			} else {
				stop()
			}
		}
		IntersectionHandler.observe(mount, handleAppIntersection)

		document.addEventListener("visibilitychange", () => {
			if (document.visibilityState === "visible") {
				const isVisible = (mount.getBoundingClientRect().top + window.innerHeight) > 0 
				if(isVisible){
					start()
				}
			} else {
				stop()
			}
		});
		
	})();
	
</script>
<style>
	#feets{
		animation: blur-fx 10s infinite; 
		animation-direction: alternate;
	}
	

	@keyframes blur-fx {
		0% { filter: blur(2px)}
		50% { filter: blur(7px)}
		100% { filter: blur(2px)}
	}
</style>



