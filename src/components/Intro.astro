<div class="w-screen h-screen" id="splash">
	<img 
		id="frank" 
		loading="eager" 
		class="w-screen h-screen object-cover" 
		src="./thumb-1920-301840.webp" 
		alt="Frank" 
	/>
	<h1 id="intro"><img loading="eager" height="160" width="160" class="w-40 relative mx-auto" src="/favicon.svg" alt="Astro logo"> Frankenstein Experiment</h1>
</div>
<script>
	import IntersectionHandler from '../scripts/observer/IntersectionHandler'
	(async function () {
		const options = {
			root: null,
			rootMargin: '0px',
			threshold: 0.01
		}

		IntersectionHandler.init(options) 
		const mount = document.getElementById('splash')
		const frank = mount.querySelector('#frank')
		//const header = document.getElementById('site-header') as HTMLElement

		function start(){
			console.log("intro start")
			frank.classList.add('frank')
			//header.classList.add('bg-opacity-50')

		}
		function stop (){
			console.log("intro stop")
			frank.classList.remove('frank')
			//header.classList.remove('bg-opacity-50')
		}
		
		function handleAppIntersection (entry){
			const { isIntersecting } = entry
			if(isIntersecting){
				start()
			} else {
				stop()
			}
		}
		IntersectionHandler.observe(mount, handleAppIntersection)

		document.addEventListener("visibilitychange", () => {
			if (document.visibilityState === "visible") {
				const isVisible = (mount.getBoundingClientRect().top + window.innerHeight) > 0 
				if(isVisible){
					start()
				}
			} else {
				stop()
			}
		});
		
	})();
	
	
</script>
<style>
	
	#intro{
		color: #dbd9d9;
		position: absolute;
		mix-blend-mode: difference;
		font-size: 4em;
		text-align: center;
		width: 100%;
		margin: auto;
		top: 50vh;
		transform: translate(0, -50%);
		/* filter: brightness(0); */
	}

	#frank{
		filter: brightness(0)
	}

	#splash {
		/* background-image: url('./thumb-1920-301840.jpg');
		background-size: cover; */
	}
	.frank{
		animation: frank 60s infinite;
		animation-direction: alternate;
	}


	@keyframes frank {
		from { filter: brightness(0)}
		to { filter: brightness(1)}
	}
</style>