import { j as createVNode, s as spreadAttributes, F as Fragment } from './astro.67ba37b7.mjs';
import 'cookie';
import 'kleur/colors';
import 'slash';
import 'path-to-regexp';
import 'mime';
import 'html-escaper';
import 'string-width';

const images = {
					
				};

				function updateImageReferences(html) {
					return html.replaceAll(
						/__ASTRO_IMAGE_="(.+)"/gm,
						(full, imagePath) => spreadAttributes({src: images[imagePath].src, ...images[imagePath].attributes})
					);
				}

				const html = updateImageReferences("<h1 id=\"vue-component-testing-with-cypress\">Vue Component Testing with Cypress</h1>\n<p>see also <a href=\"https://docs.cypress.io/guides/component-testing/vue/quickstart#Getting-Started\">Getting started</a> and <a href=\"https://docs.cypress.io/guides/component-testing/vue/overview#Framework-Support\">Framework Support</a></p>\n<p>Cypress Component Testing supports Vue 2+ with the following frameworks:</p>\n<ul>\n<li>Vue CLI</li>\n<li>Nuxt Alpha</li>\n<li>Vue with Vite</li>\n<li>Vue with Webpack</li>\n</ul>\n<p>To get up and running with Cypress Component Testing in React, install Cypress into your project:</p>\n<p><code>npm i cypress -D</code></p>\n<p>Open Cypress:</p>\n<p><code>npx cypress open</code></p>\n<p>The Cypress Launchpad will guide you through configuring your project.</p>\n<h3 id=\"creating-and-testing-a-component\">Creating and testing a Component</h3>\n<p>Example component (in src/components/Stepper.vue):</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E1E4E8\">&#x3C;</span><span style=\"color: #85E89D\">template</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  &#x3C;</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">button</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">data-cy</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"decrement\"</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">@click</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"decrement\"</span><span style=\"color: #E1E4E8\">>-&#x3C;/</span><span style=\"color: #85E89D\">button</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">span</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">data-cy</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"counter\"</span><span style=\"color: #E1E4E8\">>{{ count }}&#x3C;/</span><span style=\"color: #85E89D\">span</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#x3C;</span><span style=\"color: #85E89D\">button</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">data-cy</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"increment\"</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">@click</span><span style=\"color: #E1E4E8\">=</span><span style=\"color: #9ECBFF\">\"increment\"</span><span style=\"color: #E1E4E8\">>+&#x3C;/</span><span style=\"color: #85E89D\">button</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  &#x3C;/</span><span style=\"color: #85E89D\">div</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">&#x3C;/</span><span style=\"color: #85E89D\">template</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">&#x3C;</span><span style=\"color: #85E89D\">script</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">setup</span><span style=\"color: #E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { ref } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'vue'</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">props</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">defineProps</span><span style=\"color: #E1E4E8\">([</span><span style=\"color: #9ECBFF\">'initial'</span><span style=\"color: #E1E4E8\">])</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">emit</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">defineEmits</span><span style=\"color: #E1E4E8\">([</span><span style=\"color: #9ECBFF\">'change'</span><span style=\"color: #E1E4E8\">])</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">count</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">ref</span><span style=\"color: #E1E4E8\">(props.initial </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">increment</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    count.value</span><span style=\"color: #F97583\">++</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #B392F0\">emit</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'change'</span><span style=\"color: #E1E4E8\">, count.value)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">decrement</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    count.value</span><span style=\"color: #F97583\">--</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #B392F0\">emit</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'change'</span><span style=\"color: #E1E4E8\">, count.value)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  }</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">&#x3C;/</span><span style=\"color: #85E89D\">script</span><span style=\"color: #E1E4E8\">></span></span></code></pre>\n<p>mounting the component:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> Stepper </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'./Stepper.vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">describe</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'&#x3C;Stepper />'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #B392F0\">it</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'renders'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #6A737D\">// see: https://test-utils.vuejs.org/guide/</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(Stepper)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<h4 id=\"example-test-for-the-stepper-component\">Example test for the Stepper component</h4>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> Stepper </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'./Stepper.vue'</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">describe</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'&#x3C;Stepper>'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #B392F0\">it</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'stepper should default to 0'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(Stepper)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'[data-cy=counter]'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">should</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'have.text'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #9ECBFF\">'0'</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #B392F0\">it</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'supports an \"initial\" prop to set the value'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(Stepper, { props: { initial: </span><span style=\"color: #79B8FF\">100</span><span style=\"color: #E1E4E8\"> } })</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'[data-cy=counter]'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">should</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'have.text'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #9ECBFF\">'100'</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #B392F0\">it</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'when the increment button is pressed, the counter is incremented'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(Stepper)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'[data-cy=increment]'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">click</span><span style=\"color: #E1E4E8\">()</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'[data-cy=counter]'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">should</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'have.text'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #9ECBFF\">'1'</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #B392F0\">it</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'when the decrement button is pressed, the counter is decremented'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(Stepper)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'[data-cy=decrement]'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">click</span><span style=\"color: #E1E4E8\">()</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'[data-cy=counter]'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">should</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'have.text'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #9ECBFF\">'-1'</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #B392F0\">it</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'clicking + fires a change event with the incremented value'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">onChangeSpy</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> cy.</span><span style=\"color: #B392F0\">spy</span><span style=\"color: #E1E4E8\">().</span><span style=\"color: #B392F0\">as</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'onChangeSpy'</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(Stepper, { props: { onChange: onChangeSpy } })</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'[data-cy=increment]'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">click</span><span style=\"color: #E1E4E8\">()</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'@onChangeSpy'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">should</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'have.been.calledWith'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #79B8FF\">1</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<p>See more examples at <a href=\"https://docs.cypress.io/guides/component-testing/vue/examples\">Vue Examples</a></p>\n<h3 id=\"custom-mount-commands\">Custom Mount Commands</h3>\n<p>While you can use the mount() function in your tests, cypress recommends using cy.mount(), which is a custom command that is defined in the cypress/support/component.js file:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { mount } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'cypress/vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">Cypress.Commands.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'mount'</span><span style=\"color: #E1E4E8\">, mount)</span></span></code></pre>\n<p>This allows you to use cy.mount() in any test without having to import the mount() function in each and every spec file.</p>\n<p>By default, cy.mount() is a simple passthrough to mount(), however, you can customize cy.mount() to fit your needs. For instance, if you are using plugins or other global app-level setups in your Vue app, you can configure them here.</p>\n<h3 id=\"replicating-plugins\">Replicating Plugins</h3>\n<p>Most applications will have state management or routing. Both of these are Vue plugins:</p>\n<p>in cypress/support/component.js</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { createPinia } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'pinia'</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #6A737D\">// or Vuex</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { createI18n } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'vue-i18n'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { mount } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'cypress/vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { h } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// We recommend that you pull this out</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// into a constants file that you share with</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// your main.js file.</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">i18nOptions</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  locale: </span><span style=\"color: #9ECBFF\">'en'</span><span style=\"color: #E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  messages: {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    en: {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      hello: </span><span style=\"color: #9ECBFF\">'hello!'</span><span style=\"color: #E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    },</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    ja: {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      hello: </span><span style=\"color: #9ECBFF\">'こんにちは！'</span><span style=\"color: #E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    },</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  },</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">Cypress.Commands.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'mount'</span><span style=\"color: #E1E4E8\">, (</span><span style=\"color: #FFAB70\">component</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">...</span><span style=\"color: #FFAB70\">args</span><span style=\"color: #E1E4E8\">) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  args.global </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> args.global </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  args.global.plugins </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> args.global.plugins </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> []</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  args.global.plugins.</span><span style=\"color: #B392F0\">push</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #B392F0\">createPinia</span><span style=\"color: #E1E4E8\">())</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  args.global.plugins.</span><span style=\"color: #B392F0\">push</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #B392F0\">createI18n</span><span style=\"color: #E1E4E8\">())</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(() </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">h</span><span style=\"color: #E1E4E8\">(VApp, {}, component)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  }, </span><span style=\"color: #F97583\">...</span><span style=\"color: #E1E4E8\">args)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<h3 id=\"vue-router\">Vue Router</h3>\n<p>To use Vue Router, create a command to register the plugin and pass in a custom implementation of the router via the options param:</p>\n<p>Vue 3:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { mount } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'cypress/vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { createMemoryHistory, createRouter } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'vue-router'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { routes } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'../../src/router'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">Cypress.Commands.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'mount'</span><span style=\"color: #E1E4E8\">, (</span><span style=\"color: #FFAB70\">component</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #FFAB70\">options</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {}) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Setup options object</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.global </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.plugins </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.global.plugins </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> []</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// create router if one is not provided</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">if</span><span style=\"color: #E1E4E8\"> (</span><span style=\"color: #F97583\">!</span><span style=\"color: #E1E4E8\">options.router) {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    options.router </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">createRouter</span><span style=\"color: #E1E4E8\">({</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      routes: routes,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      history: </span><span style=\"color: #B392F0\">createMemoryHistory</span><span style=\"color: #E1E4E8\">(),</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    })</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Add router plugin</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.plugins.</span><span style=\"color: #B392F0\">push</span><span style=\"color: #E1E4E8\">({</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #B392F0\">install</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #FFAB70\">app</span><span style=\"color: #E1E4E8\">) {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      app.</span><span style=\"color: #B392F0\">use</span><span style=\"color: #E1E4E8\">(options.router)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    },</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(component, options)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<p>Vue 2:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { mount } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'cypress/vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> Vue </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> VueRouter </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'vue-router'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { router } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'../../src/router'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">Cypress.Commands.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'mount'</span><span style=\"color: #E1E4E8\">, (</span><span style=\"color: #FFAB70\">component</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #FFAB70\">options</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {}) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Add the VueRouter plugin</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  Vue.</span><span style=\"color: #B392F0\">use</span><span style=\"color: #E1E4E8\">(VueRouter)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Use the router passed in via options,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// or the default one if not provided</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.router </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.router </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> router</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(component, options)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<p>Usage:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> VueRouter </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'vue-router'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> Navigation </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'./Navigation.vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { routes } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'../router'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">it</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'home link should be active when url is \"/\"'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// No need to pass in custom router as default url is '/'</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(Navigation)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'a'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">contains</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'Home'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">should</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'have.class'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #9ECBFF\">'router-link-active'</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">it</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'login link should be active when url is \"/login\"'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Create a new router instance for each test</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">router</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">VueRouter</span><span style=\"color: #E1E4E8\">({</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    mode: </span><span style=\"color: #9ECBFF\">'history'</span><span style=\"color: #E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    routes,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Change location to `/login`</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  router.</span><span style=\"color: #B392F0\">push</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'/login'</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Pass the already initialized router for use</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(Navigation, { router })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'a'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">contains</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'Login'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">should</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'have.class'</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #9ECBFF\">'router-link-active'</span><span style=\"color: #E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<h3 id=\"vuex\">Vuex</h3>\n<p>To use a component that uses Vuex, create a mount command that configures a Vuex store for your component:</p>\n<p>Vue 3:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { mount } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'cypress/vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { getStore } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'../../src/plugins/store'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">Cypress.Commands.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'mount'</span><span style=\"color: #E1E4E8\">, (</span><span style=\"color: #FFAB70\">component</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #FFAB70\">options</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {}) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Setup options object</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.global </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.stubs </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.global.stubs </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.stubs[</span><span style=\"color: #9ECBFF\">'transition'</span><span style=\"color: #E1E4E8\">] </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">false</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.components </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.global.components </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.plugins </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.global.plugins </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> []</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Use store passed in from options, or initialize a new one</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> { </span><span style=\"color: #79B8FF\">store</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">getStore</span><span style=\"color: #E1E4E8\">(), </span><span style=\"color: #F97583\">...</span><span style=\"color: #79B8FF\">mountOptions</span><span style=\"color: #E1E4E8\"> } </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Add Vuex plugin</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.plugins.</span><span style=\"color: #B392F0\">push</span><span style=\"color: #E1E4E8\">({</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #B392F0\">install</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #FFAB70\">app</span><span style=\"color: #E1E4E8\">) {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">      app.</span><span style=\"color: #B392F0\">use</span><span style=\"color: #E1E4E8\">(store)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    },</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(component, mountOptions)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<p>Vue 2:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { mount } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'cypress/vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> Vuex </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'vuex'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { getStore } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'../../src/plugins/store'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">Cypress.Commands.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'mount'</span><span style=\"color: #E1E4E8\">, (</span><span style=\"color: #FFAB70\">component</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #FFAB70\">options</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {}) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Setup options object</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.extensions </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.extensions </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.extensions.plugins </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.extensions.plugins </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> []</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Use store passed in from options, or initialize a new one</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.store </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.store </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">getStore</span><span style=\"color: #E1E4E8\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Add Vuex plugin</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.extensions.plugins.</span><span style=\"color: #B392F0\">push</span><span style=\"color: #E1E4E8\">(Vuex)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(component, options)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<p>Usage:</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { getStore } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'@/plugins/store'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> UserProfile </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'./UserProfile.vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">it.</span><span style=\"color: #B392F0\">only</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'User profile should display user name'</span><span style=\"color: #E1E4E8\">, () </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">user</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> { name: </span><span style=\"color: #9ECBFF\">'test person'</span><span style=\"color: #E1E4E8\"> }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// getStore is a factory method that creates a new store</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">store</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">getStore</span><span style=\"color: #E1E4E8\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// mutate the store with user</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  store.</span><span style=\"color: #B392F0\">commit</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'setUser'</span><span style=\"color: #E1E4E8\">, user)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cy.</span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(UserProfile, {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    store,</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  cy.</span><span style=\"color: #B392F0\">get</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'div.name'</span><span style=\"color: #E1E4E8\">).</span><span style=\"color: #B392F0\">should</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'have.text'</span><span style=\"color: #E1E4E8\">, user.name)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<h3 id=\"global-components\">Global Components</h3>\n<p>If you have components that are registered globally in the main application file, set them up in your mount command so your component will render them properly:</p>\n<p>Vue 3</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { mount } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'cypress/vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> Button </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'../../src/components/Button.vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">Cypress.Commands.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'mount'</span><span style=\"color: #E1E4E8\">, (</span><span style=\"color: #FFAB70\">component</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #FFAB70\">options</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {}) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Setup options object</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.global </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.components </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.global.components </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Register global components</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.global.components[</span><span style=\"color: #9ECBFF\">'Button'</span><span style=\"color: #E1E4E8\">] </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> Button</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(component, options)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<p>Vue 2</p>\n<pre is:raw=\"\" class=\"astro-code github-dark\" style=\"background-color: #24292e; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> { mount } </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'cypress/vue'</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #E1E4E8\"> Button </span><span style=\"color: #F97583\">from</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">'../../src/components/Button.vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">Cypress.Commands.</span><span style=\"color: #B392F0\">add</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #9ECBFF\">'mount'</span><span style=\"color: #E1E4E8\">, (</span><span style=\"color: #FFAB70\">component</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #FFAB70\">options</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {}) </span><span style=\"color: #F97583\">=></span><span style=\"color: #E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Setup options object</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.extensions </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.extensions </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.extensions.plugins </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.extensions.plugins </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> []</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.extensions.components </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> options.extensions.components </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> {}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #6A737D\">// Register global components</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  options.extensions.components[</span><span style=\"color: #9ECBFF\">'Button'</span><span style=\"color: #E1E4E8\">] </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> Button</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">  </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">mount</span><span style=\"color: #E1E4E8\">(component, options)</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">})</span></span></code></pre>\n<p>See also <a href=\"https://docs.cypress.io/guides/component-testing/vue/api\">Cypress: Vue api</a></p>");

				const frontmatter = {};
				const file = "/Users/zp/Sites/DIGITIAMO/wc-playground/src/markdown/testing/testing-vue-components-cypress.md";
				const url = undefined;
				function rawContent() {
					return "# Vue Component Testing with Cypress\n\nsee also [Getting started](https://docs.cypress.io/guides/component-testing/vue/quickstart#Getting-Started) and [Framework Support](https://docs.cypress.io/guides/component-testing/vue/overview#Framework-Support)\n\nCypress Component Testing supports Vue 2+ with the following frameworks:\n\n- Vue CLI\n- Nuxt Alpha\n- Vue with Vite\n- Vue with Webpack\n\nTo get up and running with Cypress Component Testing in React, install Cypress into your project:\n\n`npm i cypress -D`\n\nOpen Cypress:\n\n`npx cypress open`\n\nThe Cypress Launchpad will guide you through configuring your project.\n\n\n### Creating and testing a Component\n\nExample component (in src/components/Stepper.vue):\n\n\n\n```vue\n<template>\n  <div>\n    <button data-cy=\"decrement\" @click=\"decrement\">-</button>\n    <span data-cy=\"counter\">{{ count }}</span>\n    <button data-cy=\"increment\" @click=\"increment\">+</button>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n  const props = defineProps(['initial'])\n\n  const emit = defineEmits(['change'])\n\n  const count = ref(props.initial || 0)\n\n  const increment = () => {\n    count.value++\n    emit('change', count.value)\n  }\n\n  const decrement = () => {\n    count.value--\n    emit('change', count.value)\n  }\n</script>\n```\n\nmounting the component:\n\n```js\nimport Stepper from './Stepper.vue'\n\ndescribe('<Stepper />', () => {\n  it('renders', () => {\n    // see: https://test-utils.vuejs.org/guide/\n    cy.mount(Stepper)\n  })\n})\n```\n\n#### Example test for the Stepper component\n\n```js\nimport Stepper from './Stepper.vue'\ndescribe('<Stepper>', () => {\n  it('stepper should default to 0', () => {\n    cy.mount(Stepper)\n    cy.get('[data-cy=counter]').should('have.text', '0')\n  })\n  it('supports an \"initial\" prop to set the value', () => {\n    cy.mount(Stepper, { props: { initial: 100 } })\n    cy.get('[data-cy=counter]').should('have.text', '100')\n  })\n  it('when the increment button is pressed, the counter is incremented', () => {\n    cy.mount(Stepper)\n    cy.get('[data-cy=increment]').click()\n    cy.get('[data-cy=counter]').should('have.text', '1')\n  })\n\n  it('when the decrement button is pressed, the counter is decremented', () => {\n    cy.mount(Stepper)\n    cy.get('[data-cy=decrement]').click()\n    cy.get('[data-cy=counter]').should('have.text', '-1')\n  })\n  it('clicking + fires a change event with the incremented value', () => {\n    const onChangeSpy = cy.spy().as('onChangeSpy')\n    cy.mount(Stepper, { props: { onChange: onChangeSpy } })\n    cy.get('[data-cy=increment]').click()\n    cy.get('@onChangeSpy').should('have.been.calledWith', 1)\n  })\n\n})\n```\nSee more examples at [Vue Examples](https://docs.cypress.io/guides/component-testing/vue/examples)\n\n### Custom Mount Commands\n\nWhile you can use the mount() function in your tests, cypress recommends using cy.mount(), which is a custom command that is defined in the cypress/support/component.js file:\n\n```js\nimport { mount } from 'cypress/vue'\n\nCypress.Commands.add('mount', mount)\n```\n\nThis allows you to use cy.mount() in any test without having to import the mount() function in each and every spec file.\n\nBy default, cy.mount() is a simple passthrough to mount(), however, you can customize cy.mount() to fit your needs. For instance, if you are using plugins or other global app-level setups in your Vue app, you can configure them here.\n\n### Replicating Plugins\n\nMost applications will have state management or routing. Both of these are Vue plugins:\n\nin cypress/support/component.js\n\n```js\nimport { createPinia } from 'pinia' // or Vuex\nimport { createI18n } from 'vue-i18n'\nimport { mount } from 'cypress/vue'\nimport { h } from 'vue'\n\n// We recommend that you pull this out\n// into a constants file that you share with\n// your main.js file.\nconst i18nOptions = {\n  locale: 'en',\n  messages: {\n    en: {\n      hello: 'hello!',\n    },\n    ja: {\n      hello: 'こんにちは！',\n    },\n  },\n}\n\nCypress.Commands.add('mount', (component, ...args) => {\n  args.global = args.global || {}\n  args.global.plugins = args.global.plugins || []\n  args.global.plugins.push(createPinia())\n  args.global.plugins.push(createI18n())\n\n  return mount(() => {\n    return h(VApp, {}, component)\n  }, ...args)\n})\n```\n\n### Vue Router\n\nTo use Vue Router, create a command to register the plugin and pass in a custom implementation of the router via the options param:\n\nVue 3:\n\n```js\nimport { mount } from 'cypress/vue'\nimport { createMemoryHistory, createRouter } from 'vue-router'\nimport { routes } from '../../src/router'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Setup options object\n  options.global = options.global || {}\n  options.global.plugins = options.global.plugins || []\n\n  // create router if one is not provided\n  if (!options.router) {\n    options.router = createRouter({\n      routes: routes,\n      history: createMemoryHistory(),\n    })\n  }\n\n  // Add router plugin\n  options.global.plugins.push({\n    install(app) {\n      app.use(options.router)\n    },\n  })\n\n  return mount(component, options)\n})\n```\nVue 2:\n\n```js\nimport { mount } from 'cypress/vue'\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport { router } from '../../src/router'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Add the VueRouter plugin\n  Vue.use(VueRouter)\n\n  // Use the router passed in via options,\n  // or the default one if not provided\n  options.router = options.router || router\n\n  return mount(component, options)\n})\n```\n\nUsage:\n\n```js\nimport VueRouter from 'vue-router'\nimport Navigation from './Navigation.vue'\nimport { routes } from '../router'\n\nit('home link should be active when url is \"/\"', () => {\n  // No need to pass in custom router as default url is '/'\n  cy.mount(Navigation)\n\n  cy.get('a').contains('Home').should('have.class', 'router-link-active')\n})\n\nit('login link should be active when url is \"/login\"', () => {\n  // Create a new router instance for each test\n  const router = new VueRouter({\n    mode: 'history',\n    routes,\n  })\n\n  // Change location to `/login`\n  router.push('/login')\n\n  // Pass the already initialized router for use\n  cy.mount(Navigation, { router })\n\n  cy.get('a').contains('Login').should('have.class', 'router-link-active')\n})\n```\n\n### Vuex\n\nTo use a component that uses Vuex, create a mount command that configures a Vuex store for your component:\n\nVue 3:\n\n```js\nimport { mount } from 'cypress/vue'\nimport { getStore } from '../../src/plugins/store'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Setup options object\n  options.global = options.global || {}\n  options.global.stubs = options.global.stubs || {}\n  options.global.stubs['transition'] = false\n  options.global.components = options.global.components || {}\n  options.global.plugins = options.global.plugins || []\n\n  // Use store passed in from options, or initialize a new one\n  const { store = getStore(), ...mountOptions } = options\n\n  // Add Vuex plugin\n  options.global.plugins.push({\n    install(app) {\n      app.use(store)\n    },\n  })\n\n  return mount(component, mountOptions)\n})\n```\n\nVue 2:\n\n```js\nimport { mount } from 'cypress/vue'\nimport Vuex from 'vuex'\nimport { getStore } from '../../src/plugins/store'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Setup options object\n  options.extensions = options.extensions || {}\n  options.extensions.plugins = options.extensions.plugins || []\n\n  // Use store passed in from options, or initialize a new one\n  options.store = options.store || getStore()\n\n  // Add Vuex plugin\n  options.extensions.plugins.push(Vuex)\n\n  return mount(component, options)\n})\n```\n\nUsage:\n\n```js\nimport { getStore } from '@/plugins/store'\nimport UserProfile from './UserProfile.vue'\n\nit.only('User profile should display user name', () => {\n  const user = { name: 'test person' }\n\n  // getStore is a factory method that creates a new store\n  const store = getStore()\n\n  // mutate the store with user\n  store.commit('setUser', user)\n\n  cy.mount(UserProfile, {\n    store,\n  })\n\n  cy.get('div.name').should('have.text', user.name)\n})\n```\n\n### Global Components\n\nIf you have components that are registered globally in the main application file, set them up in your mount command so your component will render them properly:\n\nVue 3\n\n```js\nimport { mount } from 'cypress/vue'\nimport Button from '../../src/components/Button.vue'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Setup options object\n  options.global = options.global || {}\n  options.global.components = options.global.components || {}\n\n  // Register global components\n  options.global.components['Button'] = Button\n\n  return mount(component, options)\n})\n```\n\nVue 2\n\n```js\nimport { mount } from 'cypress/vue'\nimport Button from '../../src/components/Button.vue'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Setup options object\n  options.extensions = options.extensions || {}\n  options.extensions.plugins = options.extensions.plugins || []\n  options.extensions.components = options.extensions.components || {}\n\n  // Register global components\n  options.extensions.components['Button'] = Button\n\n  return mount(component, options)\n})\n```\n\n\nSee also [Cypress: Vue api](https://docs.cypress.io/guides/component-testing/vue/api)";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":1,"slug":"vue-component-testing-with-cypress","text":"Vue Component Testing with Cypress"},{"depth":3,"slug":"creating-and-testing-a-component","text":"Creating and testing a Component"},{"depth":4,"slug":"example-test-for-the-stepper-component","text":"Example test for the Stepper component"},{"depth":3,"slug":"custom-mount-commands","text":"Custom Mount Commands"},{"depth":3,"slug":"replicating-plugins","text":"Replicating Plugins"},{"depth":3,"slug":"vue-router","text":"Vue Router"},{"depth":3,"slug":"vuex","text":"Vuex"},{"depth":3,"slug":"global-components","text":"Global Components"}];
				}
				async function Content() {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;
					const contentFragment = createVNode(Fragment, { 'set:html': html });
					return contentFragment;
				}
				Content[Symbol.for('astro.needsHeadRendering')] = true;

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, images, rawContent, url };
