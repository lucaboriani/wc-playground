import { h as createVNode, i as spreadAttributes, F as Fragment } from './astro.af0e87f3.mjs';
import 'html-escaper';
import 'cookie';
import 'kleur/colors';
import 'slash';
import 'path-to-regexp';
import 'mime';
import 'string-width';

const images = {
					
				};

				function updateImageReferences(html) {
					return html.replaceAll(
						/__ASTRO_IMAGE_="(.+)"/gm,
						(full, imagePath) => spreadAttributes({src: images[imagePath].src, ...images[imagePath].attributes})
					);
				}

				const html = updateImageReferences("<h1 id=\"testing-vue-components-with-vue-testing-library\">Testing Vue Components with Vue Testing Library</h1>\n<p>see <a href=\"https://testing-library.com/docs/vue-testing-library/intro/\">Vue Testing Library</a></p>\n<p>repo <a href=\"https://github.com/testing-library/vue-testing-library\">here</a></p>\n<p>Vue Testing Library builds on top of DOM Testing Library by adding APIs for working with Vue components. It is built on top of @vue/test-utils, the official testing library for Vue.</p>\n<p>If using Vue2</p>\n<p><code>npm install --save-dev @testing-library/vue@5</code></p>\n<p>or</p>\n<p><code>yarn add --dev @testing-library/vue@5</code></p>\n<p>If using Vue3</p>\n<p><code>npm install --save-dev @testing-library/vue</code></p>\n<p>or</p>\n<p><code>yarn add --dev @testing-library/vue</code></p>\n<p><strong>All examples taken from <a href=\"https://github.com/testing-library/vue-testing-library\">vue testing library repo</a></strong></p>\n<h2 id=\"basic-example\">Basic Example</h2>\n<p>Button.vue:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">p</span><span style=\"color: #C9D1D9\">>Times clicked: {{ count }}&#x3C;/</span><span style=\"color: #7EE787\">p</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> @</span><span style=\"color: #79C0FF\">click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #C9D1D9\">\"</span><span style=\"color: #C9D1D9\">increment</span><span style=\"color: #C9D1D9\">\"</span><span style=\"color: #C9D1D9\">>increment&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #C9D1D9\">name: </span><span style=\"color: #A5D6FF\">'Button'</span><span style=\"color: #FFA657\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #D2A8FF\">data</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> ({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      count: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    })</span><span style=\"color: #FFA657\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #C9D1D9\">methods: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #D2A8FF\">increment</span><span style=\"color: #C9D1D9\">() {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.count</span><span style=\"color: #FF7B72\">++</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    }</span><span style=\"color: #FFA657\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>test</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {render, screen, fireEvent} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@testing-library/vue'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> Button </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./Button'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">test</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'increments value on click'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// The `render` method renders the component into the document.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// It also binds to `screen` all the available queries to interact with</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// the component.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">render</span><span style=\"color: #C9D1D9\">(Button)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// queryByText returns the first matching node for the provided text</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// or returns null.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(screen.</span><span style=\"color: #D2A8FF\">queryByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Times clicked: 0'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toBeTruthy</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// getByText returns the first matching node for the provided text</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// or throws an error.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> screen.</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'increment'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// Click a couple of times.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(button)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(button)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(screen.</span><span style=\"color: #D2A8FF\">queryByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Times clicked: 2'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toBeTruthy</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span></code></pre>\n<h2 id=\"testing-vuex\">Testing Vuex</h2>\n<p>Asuming we’ve this  vuex store: in store.js</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">store</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">state</span><span style=\"color: #C9D1D9\">() {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      count: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  actions: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">increment</span><span style=\"color: #C9D1D9\">: ({</span><span style=\"color: #FFA657\">commit</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FFA657\">state</span><span style=\"color: #C9D1D9\">}) </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">commit</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'SET_COUNT'</span><span style=\"color: #C9D1D9\">, state.count </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">decrement</span><span style=\"color: #C9D1D9\">: ({</span><span style=\"color: #FFA657\">commit</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FFA657\">state</span><span style=\"color: #C9D1D9\">}) </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">commit</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'SET_COUNT'</span><span style=\"color: #C9D1D9\">, state.count </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  mutations: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">SET_COUNT</span><span style=\"color: #C9D1D9\">: (</span><span style=\"color: #FFA657\">state</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FFA657\">count</span><span style=\"color: #C9D1D9\">) </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      state.count </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> count</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>and a VuexTest component in VuexTest.vue in the same folder :</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">h2</span><span style=\"color: #C9D1D9\">>Counter&#x3C;/</span><span style=\"color: #7EE787\">h2</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">data-testid</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"decrementer\"</span><span style=\"color: #C9D1D9\"> @</span><span style=\"color: #79C0FF\">click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #C9D1D9\">\"</span><span style=\"color: #C9D1D9\">decrement</span><span style=\"color: #C9D1D9\">\"</span><span style=\"color: #C9D1D9\">>-&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">data-testid</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"count-value\"</span><span style=\"color: #C9D1D9\">>{{ count }}&#x3C;/</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">data-testid</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"incrementer\"</span><span style=\"color: #C9D1D9\"> @</span><span style=\"color: #79C0FF\">click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #C9D1D9\">\"</span><span style=\"color: #C9D1D9\">increment</span><span style=\"color: #C9D1D9\">\"</span><span style=\"color: #C9D1D9\">>+&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {mapActions, mapState} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vuex'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #C9D1D9\">computed: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">...</span><span style=\"color: #D2A8FF\">mapState</span><span style=\"color: #C9D1D9\">([</span><span style=\"color: #A5D6FF\">'count'</span><span style=\"color: #C9D1D9\">]),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span><span style=\"color: #FFA657\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #C9D1D9\">methods: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">...</span><span style=\"color: #D2A8FF\">mapActions</span><span style=\"color: #C9D1D9\">([</span><span style=\"color: #A5D6FF\">'decrement'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #A5D6FF\">'increment'</span><span style=\"color: #C9D1D9\">]),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span><span style=\"color: #FFA657\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">}</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>our test could look like:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@testing-library/jest-dom'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {createStore} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vuex'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {render, fireEvent} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@testing-library/vue'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> VuexTest </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./VuexTest'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {store} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./store'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">test</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'basic test with Vuex store'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">storeInstance</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">createStore</span><span style=\"color: #C9D1D9\">(store)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> {</span><span style=\"color: #79C0FF\">getByTestId</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">getByText</span><span style=\"color: #C9D1D9\">} </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">render</span><span style=\"color: #C9D1D9\">(VuexTest, {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    global: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      plugins: [storeInstance],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'count-value'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'0'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'+'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'count-value'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'1'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'+'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'count-value'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'2'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'-'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'count-value'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'1'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span></code></pre>\n<p>A common testing pattern is to create a custom renderer for a specific test file. This way, common operations such as registering a Vuex store can be abstracted out while avoiding sharing mutable state.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">function</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">renderVuexTestComponent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #FFA657\">customStore</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// Create a custom store with the original one and the one coming as a</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// parameter. This way we can alter some of its values.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">mergedStoreInstance</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">createStore</span><span style=\"color: #C9D1D9\">({</span><span style=\"color: #FF7B72\">...</span><span style=\"color: #C9D1D9\">store, </span><span style=\"color: #FF7B72\">...</span><span style=\"color: #C9D1D9\">customStore})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">render</span><span style=\"color: #C9D1D9\">(VuexTest, {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    global: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      plugins: [mergedStoreInstance],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">test</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'can render with vuex with defaults'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> {</span><span style=\"color: #79C0FF\">getByTestId</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">getByText</span><span style=\"color: #C9D1D9\">} </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">renderVuexTestComponent</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'+'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'count-value'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'1'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">test</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'can render with vuex with custom initial state'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> {</span><span style=\"color: #79C0FF\">getByTestId</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">getByText</span><span style=\"color: #C9D1D9\">} </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">renderVuexTestComponent</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">state</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> ({count: </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #C9D1D9\">}),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'-'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'count-value'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'2'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">test</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'can render with vuex with custom store'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// This is a silly store that can never be changed.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// eslint-disable-next-line no-shadow</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">store</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">createStore</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">state</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> ({count: </span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\">}),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    actions: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #D2A8FF\">increment</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> jest.</span><span style=\"color: #D2A8FF\">fn</span><span style=\"color: #C9D1D9\">(),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #D2A8FF\">decrement</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> jest.</span><span style=\"color: #D2A8FF\">fn</span><span style=\"color: #C9D1D9\">(),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// Notice how here we are not using the helper rendering method, because</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// there's no need to do that here. We're passing a whole store.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> {</span><span style=\"color: #79C0FF\">getByTestId</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">getByText</span><span style=\"color: #C9D1D9\">} </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">render</span><span style=\"color: #C9D1D9\">(VuexTest, {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    global: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      plugins: [store],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'+'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'count-value'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'1000'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'-'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'count-value'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'1000'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span></code></pre>\n<h2 id=\"testing-vue-router\">Testing Vue Router</h2>\n<p>Assuming in the same folder we have an App, Home and About components :</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">// App.vue :</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">router-link</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">to</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"/\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">data-testid</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"home-link\"</span><span style=\"color: #C9D1D9\">>Home&#x3C;/</span><span style=\"color: #7EE787\">router-link</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">router-link</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">to</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"/about\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">data-testid</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"about-link\"</span><span style=\"color: #C9D1D9\">>About&#x3C;/</span><span style=\"color: #7EE787\">router-link</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">router-view</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">data-testid</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"location-display\"</span><span style=\"color: #C9D1D9\">></span><span style=\"color: #FF7B72\">{</span><span style=\"color: #C9D1D9\">{ $route.fullPath }</span><span style=\"color: #FF7B72\">}</span><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//Home.vue</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>You are home&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//About.vue</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>You are on the about page&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>our Test :</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">/* eslint-disable vue/require-prop-types */</span></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/* eslint-disable vue/one-component-per-file */</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@testing-library/jest-dom'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {waitFor} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@testing-library/dom'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {defineComponent} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {createRouter, createWebHistory} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue-router'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {render, fireEvent} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'..'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> App </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./App.vue'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> Home </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./Home.vue'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> About </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./About.vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">test</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'full app rendering/navigating from base URL'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// Create a Router instance</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// https://next.router.vuejs.org/api/#createrouter</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// using a HTML5 history.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// https://next.router.vuejs.org/api/#createwebhistory</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">router</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">createRouter</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    history: </span><span style=\"color: #D2A8FF\">createWebHistory</span><span style=\"color: #C9D1D9\">(),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    routes: [</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      {path: </span><span style=\"color: #A5D6FF\">'/'</span><span style=\"color: #C9D1D9\">, component: Home},</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      {path: </span><span style=\"color: #A5D6FF\">'/about'</span><span style=\"color: #C9D1D9\">, component: About},</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    ],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> {</span><span style=\"color: #79C0FF\">findByText</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">getByText</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">getByTestId</span><span style=\"color: #C9D1D9\">} </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">render</span><span style=\"color: #C9D1D9\">(App, {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    global: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      plugins: [router],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// Vue Router navigation is async, so we need to wait until the</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// initial render happens</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">findByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'You are home'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toBeInTheDocument</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'location-display'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'/'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">click</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'about-link'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// Same thing here: Vue Router navigation is async, so we need to wait until the</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// navigation happens</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">waitFor</span><span style=\"color: #C9D1D9\">(() </span><span style=\"color: #FF7B72\">=></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByTestId</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'location-display'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toHaveTextContent</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'/about'</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'You are on the about page'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toBeInTheDocument</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">test</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'sets router initial state'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Component</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">defineComponent</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    props: [</span><span style=\"color: #A5D6FF\">'to'</span><span style=\"color: #C9D1D9\">],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    template: </span><span style=\"color: #A5D6FF\">`&#x3C;router-link :to=\"to\">Learn More&#x3C;/router-link>`</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">route</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    name: </span><span style=\"color: #A5D6FF\">'routeName'</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    path: </span><span style=\"color: #A5D6FF\">'/'</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    component: </span><span style=\"color: #D2A8FF\">defineComponent</span><span style=\"color: #C9D1D9\">({template: </span><span style=\"color: #A5D6FF\">`&#x3C;div>&#x3C;/div>`</span><span style=\"color: #C9D1D9\">}),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">router</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">createRouter</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    history: </span><span style=\"color: #D2A8FF\">createWebHistory</span><span style=\"color: #C9D1D9\">(),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    routes: [route],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">to</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> {name: route.name}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> {</span><span style=\"color: #79C0FF\">getByText</span><span style=\"color: #C9D1D9\">} </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">render</span><span style=\"color: #C9D1D9\">(Component, {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    props: {to},</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    global: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      plugins: [router],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// We need to wait for router to complete the initial navigation.</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> router.</span><span style=\"color: #D2A8FF\">isReady</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Learn More'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(button).</span><span style=\"color: #D2A8FF\">toHaveAttribute</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'href'</span><span style=\"color: #C9D1D9\">, route.path)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span></code></pre>\n<h2 id=\"testing-vue-i18n\">testing vue-i18n</h2>\n<p>Assuming we’ve a Translations.vue component</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">h2</span><span style=\"color: #C9D1D9\">>{{ </span><span style=\"color: #D2A8FF\">$t</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'hello'</span><span style=\"color: #C9D1D9\">) }}&#x3C;/</span><span style=\"color: #7EE787\">h2</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">select</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">v-model</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #C9D1D9\">\"</span><span style=\"color: #C9D1D9\">$i18n.locale</span><span style=\"color: #C9D1D9\">\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">option</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">value</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"en\"</span><span style=\"color: #C9D1D9\">>English&#x3C;/</span><span style=\"color: #7EE787\">option</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">option</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">value</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"ja\"</span><span style=\"color: #C9D1D9\">>Japanese&#x3C;/</span><span style=\"color: #7EE787\">option</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">select</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #C9D1D9\">name: </span><span style=\"color: #A5D6FF\">'Translations'</span><span style=\"color: #FFA657\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">}</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>our test :</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@testing-library/jest-dom'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {createI18n} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue-i18n'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> {render, fireEvent} </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'..'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> Translations </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./Translations'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">i18n</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">createI18n</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  legacy: </span><span style=\"color: #79C0FF\">true</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  locale: </span><span style=\"color: #A5D6FF\">'en'</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  messages: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    en: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      hello: </span><span style=\"color: #A5D6FF\">'Hello'</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    ja: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      hello: </span><span style=\"color: #A5D6FF\">'こんにちは'</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">test</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'renders translations'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> {</span><span style=\"color: #79C0FF\">queryByText</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">getByText</span><span style=\"color: #C9D1D9\">} </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">render</span><span style=\"color: #C9D1D9\">(Translations, {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    global: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      plugins: [i18n],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Hello'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toBeInTheDocument</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> fireEvent.</span><span style=\"color: #D2A8FF\">update</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Japanese'</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">getByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'こんにちは'</span><span style=\"color: #C9D1D9\">)).</span><span style=\"color: #D2A8FF\">toBeInTheDocument</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">expect</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #D2A8FF\">queryByText</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Hello'</span><span style=\"color: #C9D1D9\">)).not.</span><span style=\"color: #D2A8FF\">toBeInTheDocument</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span></code></pre>");

				const frontmatter = {};
				const file = "/Users/zp/Sites/DIGITIAMO/wc-playground/src/markdown/testing/testing-vue-components-vue-testing-library.md";
				const url = undefined;
				function rawContent() {
					return "# Testing Vue Components with Vue Testing Library\n\nsee [Vue Testing Library](https://testing-library.com/docs/vue-testing-library/intro/)\n\nrepo [here](https://github.com/testing-library/vue-testing-library)\n\nVue Testing Library builds on top of DOM Testing Library by adding APIs for working with Vue components. It is built on top of @vue/test-utils, the official testing library for Vue.\n\nIf using Vue2\n\n`npm install --save-dev @testing-library/vue@5`\n\nor \n\n`yarn add --dev @testing-library/vue@5`\n\nIf using Vue3\n\n`npm install --save-dev @testing-library/vue`\n\nor \n\n`yarn add --dev @testing-library/vue`\n\n**All examples taken from [vue testing library repo](https://github.com/testing-library/vue-testing-library)**\n\n## Basic Example\n\nButton.vue: \n\n```vue\n<template>\n  <p>Times clicked: {{ count }}</p>\n  <button @click=\"increment\">increment</button>\n</template>\n\n<script>\n  export default {\n    name: 'Button',\n    data: () => ({\n      count: 0,\n    }),\n    methods: {\n      increment() {\n        this.count++\n      },\n    },\n  }\n</script>\n```\n\ntest\n\n```js\nimport {render, screen, fireEvent} from '@testing-library/vue'\nimport Button from './Button'\n\ntest('increments value on click', async () => {\n  // The `render` method renders the component into the document.\n  // It also binds to `screen` all the available queries to interact with\n  // the component.\n  render(Button)\n\n  // queryByText returns the first matching node for the provided text\n  // or returns null.\n  expect(screen.queryByText('Times clicked: 0')).toBeTruthy()\n\n  // getByText returns the first matching node for the provided text\n  // or throws an error.\n  const button = screen.getByText('increment')\n\n  // Click a couple of times.\n  await fireEvent.click(button)\n  await fireEvent.click(button)\n\n  expect(screen.queryByText('Times clicked: 2')).toBeTruthy()\n})\n```\n\n## Testing Vuex\n\nAsuming we've this  vuex store: in store.js\n\n```js\nexport const store = {\n  state() {\n    return {\n      count: 0,\n    }\n  },\n  actions: {\n    increment: ({commit, state}) => commit('SET_COUNT', state.count + 1),\n    decrement: ({commit, state}) => commit('SET_COUNT', state.count - 1),\n  },\n  mutations: {\n    SET_COUNT: (state, count) => {\n      state.count = count\n    },\n  },\n}\n```\n\nand a VuexTest component in VuexTest.vue in the same folder :\n\n```vue\n<template>\n  <h2>Counter</h2>\n  <button data-testid=\"decrementer\" @click=\"decrement\">-</button>\n  <span data-testid=\"count-value\">{{ count }}</span>\n  <button data-testid=\"incrementer\" @click=\"increment\">+</button>\n</template>\n\n<script>\nimport {mapActions, mapState} from 'vuex'\nexport default {\n  computed: {\n    ...mapState(['count']),\n  },\n  methods: {\n    ...mapActions(['decrement', 'increment']),\n  },\n}\n</script>\n```\n\nour test could look like: \n\n```js\nimport '@testing-library/jest-dom'\nimport {createStore} from 'vuex'\nimport {render, fireEvent} from '@testing-library/vue'\nimport VuexTest from './VuexTest'\nimport {store} from './store'\n\ntest('basic test with Vuex store', async () => {\n  const storeInstance = createStore(store)\n\n  const {getByTestId, getByText} = render(VuexTest, {\n    global: {\n      plugins: [storeInstance],\n    },\n  })\n\n  expect(getByTestId('count-value')).toHaveTextContent('0')\n\n  await fireEvent.click(getByText('+'))\n  expect(getByTestId('count-value')).toHaveTextContent('1')\n\n  await fireEvent.click(getByText('+'))\n  expect(getByTestId('count-value')).toHaveTextContent('2')\n\n  await fireEvent.click(getByText('-'))\n  expect(getByTestId('count-value')).toHaveTextContent('1')\n})\n```\n\nA common testing pattern is to create a custom renderer for a specific test file. This way, common operations such as registering a Vuex store can be abstracted out while avoiding sharing mutable state.\n\n```js\nfunction renderVuexTestComponent(customStore) {\n  // Create a custom store with the original one and the one coming as a\n  // parameter. This way we can alter some of its values.\n  const mergedStoreInstance = createStore({...store, ...customStore})\n\n  return render(VuexTest, {\n    global: {\n      plugins: [mergedStoreInstance],\n    },\n  })\n}\n\ntest('can render with vuex with defaults', async () => {\n  const {getByTestId, getByText} = renderVuexTestComponent()\n\n  await fireEvent.click(getByText('+'))\n\n  expect(getByTestId('count-value')).toHaveTextContent('1')\n})\n\ntest('can render with vuex with custom initial state', async () => {\n  const {getByTestId, getByText} = renderVuexTestComponent({\n    state: () => ({count: 3}),\n  })\n\n  await fireEvent.click(getByText('-'))\n\n  expect(getByTestId('count-value')).toHaveTextContent('2')\n})\n\ntest('can render with vuex with custom store', async () => {\n  // This is a silly store that can never be changed.\n  // eslint-disable-next-line no-shadow\n  const store = createStore({\n    state: () => ({count: 1000}),\n    actions: {\n      increment: () => jest.fn(),\n      decrement: () => jest.fn(),\n    },\n  })\n\n  // Notice how here we are not using the helper rendering method, because\n  // there's no need to do that here. We're passing a whole store.\n  const {getByTestId, getByText} = render(VuexTest, {\n    global: {\n      plugins: [store],\n    },\n  })\n\n  await fireEvent.click(getByText('+'))\n  expect(getByTestId('count-value')).toHaveTextContent('1000')\n\n  await fireEvent.click(getByText('-'))\n  expect(getByTestId('count-value')).toHaveTextContent('1000')\n})\n```\n\n\n## Testing Vue Router\n\nAssuming in the same folder we have an App, Home and About components :\n\n```js\n// App.vue :\n<template>\n  <router-link to=\"/\" data-testid=\"home-link\">Home</router-link>\n  <router-link to=\"/about\" data-testid=\"about-link\">About</router-link>\n  <router-view />\n  <div data-testid=\"location-display\">{{ $route.fullPath }}</div>\n</template>\n\n//Home.vue\n<template>\n  <div>You are home</div>\n</template>\n\n//About.vue\n<template>\n  <div>You are on the about page</div>\n</template>\n```\n\nour Test :\n\n```js\n/* eslint-disable vue/require-prop-types */\n/* eslint-disable vue/one-component-per-file */\n\nimport '@testing-library/jest-dom'\nimport {waitFor} from '@testing-library/dom'\nimport {defineComponent} from 'vue'\nimport {createRouter, createWebHistory} from 'vue-router'\nimport {render, fireEvent} from '..'\nimport App from './App.vue'\nimport Home from './Home.vue'\nimport About from './About.vue'\n\ntest('full app rendering/navigating from base URL', async () => {\n  // Create a Router instance\n  // https://next.router.vuejs.org/api/#createrouter\n  // using a HTML5 history.\n  // https://next.router.vuejs.org/api/#createwebhistory\n  const router = createRouter({\n    history: createWebHistory(),\n    routes: [\n      {path: '/', component: Home},\n      {path: '/about', component: About},\n    ],\n  })\n\n  const {findByText, getByText, getByTestId} = render(App, {\n    global: {\n      plugins: [router],\n    },\n  })\n\n  // Vue Router navigation is async, so we need to wait until the\n  // initial render happens\n  expect(await findByText('You are home')).toBeInTheDocument()\n  expect(getByTestId('location-display')).toHaveTextContent('/')\n\n  await fireEvent.click(getByTestId('about-link'))\n\n  // Same thing here: Vue Router navigation is async, so we need to wait until the\n  // navigation happens\n  await waitFor(() =>\n    expect(getByTestId('location-display')).toHaveTextContent('/about'),\n  )\n\n  expect(getByText('You are on the about page')).toBeInTheDocument()\n})\n\ntest('sets router initial state', async () => {\n  const Component = defineComponent({\n    props: ['to'],\n    template: `<router-link :to=\"to\">Learn More</router-link>`,\n  })\n\n  const route = {\n    name: 'routeName',\n    path: '/',\n    component: defineComponent({template: `<div></div>`}),\n  }\n\n  const router = createRouter({\n    history: createWebHistory(),\n    routes: [route],\n  })\n\n  const to = {name: route.name}\n\n  const {getByText} = render(Component, {\n    props: {to},\n    global: {\n      plugins: [router],\n    },\n  })\n\n  // We need to wait for router to complete the initial navigation.\n  await router.isReady()\n\n  const button = getByText('Learn More')\n  expect(button).toHaveAttribute('href', route.path)\n})\n```\n\n\n## testing vue-i18n\n\nAssuming we've a Translations.vue component\n\n```vue\n<template>\n  <h2>{{ $t('hello') }}</h2>\n  <select v-model=\"$i18n.locale\">\n    <option value=\"en\">English</option>\n    <option value=\"ja\">Japanese</option>\n  </select>\n</template>\n\n<script>\nexport default {\n  name: 'Translations',\n}\n</script>\n```\n\nour test : \n\n```js\nimport '@testing-library/jest-dom'\nimport {createI18n} from 'vue-i18n'\nimport {render, fireEvent} from '..'\nimport Translations from './Translations'\n\nconst i18n = createI18n({\n  legacy: true,\n  locale: 'en',\n  messages: {\n    en: {\n      hello: 'Hello',\n    },\n    ja: {\n      hello: 'こんにちは',\n    },\n  },\n})\n\ntest('renders translations', async () => {\n  const {queryByText, getByText} = render(Translations, {\n    global: {\n      plugins: [i18n],\n    },\n  })\n\n  expect(getByText('Hello')).toBeInTheDocument()\n\n  await fireEvent.update(getByText('Japanese'))\n\n  expect(getByText('こんにちは')).toBeInTheDocument()\n\n  expect(queryByText('Hello')).not.toBeInTheDocument()\n})\n```";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":1,"slug":"testing-vue-components-with-vue-testing-library","text":"Testing Vue Components with Vue Testing Library"},{"depth":2,"slug":"basic-example","text":"Basic Example"},{"depth":2,"slug":"testing-vuex","text":"Testing Vuex"},{"depth":2,"slug":"testing-vue-router","text":"Testing Vue Router"},{"depth":2,"slug":"testing-vue-i18n","text":"testing vue-i18n"}];
				}
				async function Content() {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;
					const contentFragment = createVNode(Fragment, { 'set:html': html });
					return contentFragment;
				}
				Content[Symbol.for('astro.needsHeadRendering')] = true;

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, images, rawContent, url };
